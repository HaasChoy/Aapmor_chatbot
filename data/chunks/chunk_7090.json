{"id": "e290b03b-4055-480f-a1c5-5934692d6910", "text": "for name, func in models.items():\n# evaluate and get scores\nscore, scores = evaluate_model(func, train, test)\n# summarize scores\nsummarize_scores(name, score, scores)\n# plot scores\npyplot.plot(days, scores, marker=' o' , label=name)\n# show plot\npyplot.legend()\npyplot.show()\nListing 17.24: Example of evaluating and comparing naive forecast methods.\nRunning the example Ô¨Årst prints the total and daily scores for each model. We can see that", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 369, "page_label": "353"}}