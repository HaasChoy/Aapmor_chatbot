{"id": "71b00380-fbf3-47c6-8d19-0f0cc7df7b35", "text": "layer simpliﬁes the feature maps by keeping 1\n4 of the values with the largest (max) signal. The\ndistilled feature maps after the pooling layer are then ﬂattened into one long vector that can\nthen be used as input to the decoding process.\n# define cnn input model\nmodel.add(Conv1D(filters=64, kernel_size=3, activation=' relu' ,\ninput_shape=(n_timesteps,n_features)))\nmodel.add(Conv1D(filters=64, kernel_size=3, activation=' relu' ))\nmodel.add(MaxPooling1D(pool_size=2))\nmodel.add(Flatten())", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 432, "page_label": "416"}}