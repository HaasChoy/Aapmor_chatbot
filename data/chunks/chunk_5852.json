{"id": "cd0321ce-0846-4410-be92-476bb7b07adf", "text": "model.add(Flatten())\nmodel.add(Dense(50, activation=' relu' ))\nmodel.add(Dense(1))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 8.21: Example of deÔ¨Åning a CNN for forecasting a dependent series.\nWhen making a prediction, the model expects three time steps for two input time series.\nWe can predict the next value in the output series providing the input values of:\n80, 85\n90, 95\n100, 105\nListing 8.22: Example input for forecasting out-of-sample.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 112, "page_label": "96"}}