{"id": "f82e5781-3aad-4d67-b7e8-1b402f2eb894", "text": "return model\nListing 15.35: Example of a function for ﬁtting a CNN model for a given conﬁguration.\nMaking a prediction with a ﬁt CNN model is very much like making a prediction with a\nﬁt MLP. Again, the only diﬀerence is that the one sample worth of input data must have a\nthree-dimensional shape.\nx_input = array(history[-n_input:]).reshape((1, n_input, 1))\nListing 15.36: Example of reshaping one sample for making a forecast.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 323, "page_label": "307"}}