{"id": "69f4b5ed-5b2f-4514-bdcc-dc4d990717ff", "text": "model.add(Flatten())\nmodel.add(Dense(50, activation=' relu' ))\nmodel.add(Dense(n_steps_out))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 8.60: Example of deÔ¨Åning a CNN model for multi-step forecasting.\nThe model can make a prediction for a single sample. We can predict the next two steps\nbeyond the end of the dataset by providing the input: [70, 80, 90]. We would expect the\npredicted output to be: [100, 110]. As expected by the model, the shape of the single sample", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 127, "page_label": "111"}}