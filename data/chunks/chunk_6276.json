{"id": "a0576d2d-47b3-44c1-ab35-d4ba3fadb910", "text": "scores = executor(tasks)\nelse:\nscores = [score_model(data, n_test, cfg) for cfg in cfg_list]\n# remove empty results\nscores = [r for r in scores if r[1] != None]\n# sort configs by error, asc\nscores.sort(key=lambda tup: tup[1])\nreturn scores\nListing 11.23: Example of a function for grid searching conﬁgurations.\nWe’re nearly done. The only thing left to do is to deﬁne a list of model conﬁgurations to try\nfor a dataset. We can deﬁne this generically. The only parameter we may want to specify is", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 196, "page_label": "180"}}