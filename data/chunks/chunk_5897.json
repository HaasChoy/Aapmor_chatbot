{"id": "c4a665e7-4e98-4e70-8e80-007323e8ec99", "text": "where each output submodel will forecast a single time step.\n# define output 1\noutput1 = Dense(1)(cnn)\n# define output 2\noutput2 = Dense(1)(cnn)\n# define output 3\noutput3 = Dense(1)(cnn)\nListing 8.47: Example of deÔ¨Åning the output models.\nWe can then tie the input and output layers together into a single model.\n# tie together\nmodel = Model(inputs=visible, outputs=[output1, output2, output3])\nmodel.compile(optimizer=' adam' , loss=' mse' )", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 122, "page_label": "106"}}