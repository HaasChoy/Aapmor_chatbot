{"id": "9a086db8-1121-4077-8a9c-6f3af71ec82e", "text": "each read operation of the input sequence. The convolution layer is followed by a max pooling\nlayer that distills the ﬁlter maps down to 1\n4 of their size that includes the most salient features.\nThese structures are then ﬂattened down to a single one-dimensional vector to be used as a\nsingle input time step to the LSTM layer.\n# define the input cnn model\nmodel.add(TimeDistributed(Conv1D(filters=64, kernel_size=1, activation=' relu' ),\ninput_shape=(None, n_steps, n_features)))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 147, "page_label": "131"}}