{"id": "ed0675c6-3233-434a-aa2a-2561afe89cda", "text": "The StandardScaler scikit-learn class will be used to perform the transform. It is ﬁrst ﬁt on the\ntraining data (e.g. to ﬁnd the mean and standard deviation for each variable), then applied to\nthe train and test sets. The standardization is optional, so we can apply the process and compare\nthe results to the same code path without the standardization in a controlled experiment.\n# standardize data\ndef scale_data(trainX, testX, standardize):\n# remove overlap\ncut = int(trainX.shape[1] / 2)", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 519, "page_label": "503"}}