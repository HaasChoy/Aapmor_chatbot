{"id": "dd34c9b7-d1f2-4627-b17a-ab14628a41d7", "text": "We can tie all of this together and demonstrate how to develop an MLP for univariate time\nseries forecasting and make a single prediction.\n# univariate mlp example\nfrom numpy import array\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n# split a univariate sequence into samples\ndef split_sequence(sequence, n_steps):\nX, y = list(), list()", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 72, "page_label": "56"}}