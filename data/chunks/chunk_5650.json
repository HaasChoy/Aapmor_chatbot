{"id": "b0221ac8-f12a-453f-95f9-4712b6ce476f", "text": "7.2. Univariate MLP Models 55\nbreak\n# gather input and output parts of the pattern\nseq_x, seq_y = sequence[i:end_ix], sequence[end_ix]\nX.append(seq_x)\ny.append(seq_y)\nreturn array(X), array(y)\nListing 7.3: Example of a function to split a univariate series into a supervised learning problem.\nWe can demonstrate this function on our small contrived dataset above. The complete\nexample is listed below.\n# univariate data preparation\nfrom numpy import array\n# split a univariate sequence into samples", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 71, "page_label": "55"}}