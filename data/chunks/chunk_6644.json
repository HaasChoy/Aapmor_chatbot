{"id": "b448f52a-7c97-4662-a317-433e7bde03ef", "text": "# fit\nmodel.fit(train_x, train_y, epochs=n_epochs, batch_size=n_batch, verbose=0)\nreturn model\nListing 14.20: Example of a function for deﬁning and ﬁtting a MLP forecast model.\nMaking a prediction with a ﬁt MLP model is as straightforward as calling the predict()\nfunction and passing in one sample worth of input values required to make the prediction.\n# make a prediction\nyhat = model.predict(x_input, verbose=0)\nListing 14.21: Example of making a prediction with a ﬁt MLP model.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 274, "page_label": "258"}}