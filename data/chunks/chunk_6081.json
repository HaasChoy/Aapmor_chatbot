{"id": "670ca714-8f79-44a4-b722-360b90c3787b", "text": "9.3. Multivariate LSTM Models 143\n# define model\nmodel = Sequential()\nmodel.add(LSTM(100, activation=' relu' , return_sequences=True, input_shape=(n_steps,\nn_features)))\nmodel.add(LSTM(100, activation=' relu' ))\nmodel.add(Dense(n_features))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 9.47: Example of deÔ¨Åning a Stacked LSTM for parallel time series forecasting.\nWe can predict the next value in each of the three parallel series by providing an input of\nthree time steps for each series.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 159, "page_label": "143"}}