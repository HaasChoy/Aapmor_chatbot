{"id": "703b8651-cf27-4e1f-b361-b2a506e17a61", "text": "be written as:\n...\n# transform input from [samples, features] to [samples, timesteps, features]\nX = X.reshape((X.shape[0], X.shape[1], 1))\nListing 6.11: Example of reshaping 2D data to be 3D.\nWe can make this concept concrete with a worked example. The complete code listing is\nprovided below.\n# transform univariate 2d to 3d\nfrom numpy import array\n# split a univariate sequence into samples\ndef split_sequence(sequence, n_steps):\nX, y = list(), list()\nfor i in range(len(sequence)):", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 63, "page_label": "47"}}