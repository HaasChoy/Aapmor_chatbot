{"id": "f1266127-f7be-495b-a445-028e46ea5b92", "text": "have the same eﬀect.\nWe will simplify the example and focus on the CNN-LSTM with univariate input, but it can\njust as easily be updated to use multivariate input, which is left as an exercise. As before, we\nwill use input sequences comprised of 14 days of daily total power consumption. We will deﬁne\na simple but eﬀective CNN architecture for the encoder that is comprised of two convolutional\nlayers followed by a max pooling layer, the results of which are then ﬂattened.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 431, "page_label": "415"}}