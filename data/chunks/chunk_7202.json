{"id": "b1fdf942-9ec1-4d00-a692-8addc32fbba7", "text": "yhat = model.predict(input_x, verbose=0)\n# we only want the vector forecast\nyhat = yhat[0]\nListing 19.11: Example of making a single one-week prediction.\nThe forecast() function below implements this and takes as arguments the model Ô¨Åt on\nthe training dataset, the history of data observed so far, and the number of inputs time steps\nexpected by the model.\n# make a forecast\ndef forecast(model, history, n_input):\n# flatten data\ndata = array(history)", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 390, "page_label": "374"}}