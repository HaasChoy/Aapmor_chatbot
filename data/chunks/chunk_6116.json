{"id": "0dee7d5d-09c0-400b-827a-ef81e526c833", "text": "model.add(RepeatVector(n_steps_out))\nListing 9.67: Example of repeating the encoded vector.\nThis sequence is then provided to an LSTM decoder model. The model must output a value\nfor each value in the output time step, which can be interpreted by a single output model.\n# define decoder model\nmodel.add(LSTM(100, activation=' relu' , return_sequences=True))\nListing 9.68: Example of deÔ¨Åning the decoder model.\nWe can use the same output layer or layers to make each one-step prediction in the output", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 165, "page_label": "149"}}