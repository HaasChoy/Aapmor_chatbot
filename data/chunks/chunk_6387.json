{"id": "87ef6449-a7df-415f-b2d2-2f5dd2ff3941", "text": "12.2. Develop a Grid Search Framework 208\n# fit model\nmodel_fit = model.fit(optimized=True, use_boxcox=b, remove_bias=r)\n# make one step forecast\nyhat = model_fit.predict(len(history), len(history))\nreturn yhat[0]\nListing 12.1: Example of a function for making an ETS forecast.\nIn this tutorial, we will use the grid searching framework developed in Chapter 11 for tuning\nand evaluating naive forecasting methods. One important modiÔ¨Åcation to the framework is the", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 224, "page_label": "208"}}