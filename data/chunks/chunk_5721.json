{"id": "97ea506a-fbdb-4e05-8232-ec4d50c1faa9", "text": "# flatten input\nn_input = X.shape[1] * X.shape[2]\nX = X.reshape((X.shape[0], n_input))\nListing 7.43: Example of ﬂattening multivariate time series for input to a MLP.\nThe model output will be a vector, with one element for each of the three diﬀerent time\nseries.\n# determine the number of outputs\nn_output = y.shape[1]\nListing 7.44: Example of deﬁning the size of the vector to forecast.\nWe can now deﬁne our model, using the ﬂattened vector length for the input layer and the", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 85, "page_label": "69"}}