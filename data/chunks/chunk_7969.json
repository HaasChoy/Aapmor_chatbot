{"id": "74ba7fe5-f7b1-4829-9a9a-65fbc5aaf4c7", "text": "ﬁnal output layer is used to make predictions. The eﬃcient Adam version of stochastic gradient\ndescent will be used to optimize the network, and the categorical cross entropy loss function\nwill be used given that we are learning a multiclass classiﬁcation problem. The deﬁnition of the\nmodel is listed below.\n# define the lstm model\nmodel = Sequential()\nmodel.add(LSTM(100, input_shape=(n_timesteps,n_features)))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(100, activation=' relu' ))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 543, "page_label": "527"}}