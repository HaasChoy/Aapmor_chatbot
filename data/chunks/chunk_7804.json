{"id": "32f723e2-b8cf-4a3a-baa2-8532f27f565a", "text": "testy = to_categorical(testy)\nprint(trainX.shape, trainy.shape, testX.shape, testy.shape)\nreturn trainX, trainy, testX, testy\nListing 24.4: Example of a function for loading the entire dataset.\n24.3.2 Fit and Evaluate Model\nNow that we have the data loaded into memory ready for modeling, we can deﬁne, ﬁt, and\nevaluate a 1D CNN model. We can deﬁne a function named evaluate model() that takes the\ntrain and test dataset, ﬁts a model on the training dataset, evaluates it on the test dataset, and", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 510, "page_label": "494"}}