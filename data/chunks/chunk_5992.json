{"id": "3132d0ae-3cbc-479b-a53e-f11843d7b8ec", "text": "time series forecasting as follows.\n# define model\nmodel = Sequential()\nmodel.add(LSTM(50, activation=' relu' , input_shape=(n_steps, n_features)))\nmodel.add(Dense(1))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 9.6: Example of deﬁning a Vanilla LSTM model.\nKey in the deﬁnition is the shape of the input; that is what the model expects as input for\neach sample in terms of the number of time steps and the number of features. We are working", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 142, "page_label": "126"}}