{"id": "13802b4e-1ae1-450e-9b2e-cf472818431b", "text": "model.add(Conv1D(filters=64, kernel_size=2, activation=' relu' , input_shape=(n_steps,\nn_features)))\nmodel.add(MaxPooling1D(pool_size=2))\nmodel.add(Flatten())\nmodel.add(Dense(50, activation=' relu' ))\nmodel.add(Dense(1))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 8.6: Example of deﬁning a CNN model.\nKey in the deﬁnition is the shape of the input; that is what the model expects as input for\neach sample in terms of the number of time steps and the number of features. We are working", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 106, "page_label": "90"}}