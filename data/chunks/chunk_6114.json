{"id": "6eb9e88b-d1a2-4f49-9793-03c535fd76e1", "text": "9.4. Multi-step LSTM Models 149\nThe encoder is a model responsible for reading and interpreting the input sequence. The\noutput of the encoder is a ﬁxed length vector that represents the model’s interpretation of the\nsequence. The encoder is traditionally a Vanilla LSTM model, although other encoder models\ncan be used such as Stacked, Bidirectional, and CNN models.\n# define encoder model\nmodel.add(LSTM(100, activation=' relu' , input_shape=(n_steps_in, n_features)))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 165, "page_label": "149"}}