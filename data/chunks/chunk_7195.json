{"id": "cb0158c5-c436-40bb-af86-370bad2f2008", "text": "input_shape=(n_timesteps,n_features)))\nmodel.add(MaxPooling1D(pool_size=2))\nmodel.add(Flatten())\nmodel.add(Dense(10, activation=' relu' ))\nmodel.add(Dense(n_outputs))\nmodel.compile(loss=' mse' , optimizer=' adam' )\n# fit network\nmodel.fit(train_x, train_y, epochs=epochs, batch_size=batch_size, verbose=verbose)\nreturn model\nListing 19.7: Example of a function for ﬁtting a CNN model.\nNow that we know how to ﬁt the model, we can look at how the model can be used to make", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 389, "page_label": "373"}}