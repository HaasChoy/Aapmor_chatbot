{"id": "54a2b35e-1ae5-4d97-bed5-cf07e8a2424a", "text": "is called a Bidirectional LSTM. We can implement a Bidirectional LSTM for univariate time\nseries forecasting by wrapping the ﬁrst hidden layer in a wrapper layer called Bidirectional.\nAn example of deﬁning a Bidirectional LSTM to read input both forward and backward is as\nfollows.\n# define model\nmodel = Sequential()\nmodel.add(Bidirectional(LSTM(50, activation=' relu' ), input_shape=(n_steps, n_features)))\nmodel.add(Dense(1))\nmodel.compile(optimizer=' adam' , loss=' mse' )", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 145, "page_label": "129"}}