{"id": "8ae9b2fd-9e3a-45bc-bf9b-98851971e292", "text": "20.6. Univariate Input and Vector Output 399\nmodel = Sequential()\nmodel.add(LSTM(200, activation=' relu' , input_shape=(n_timesteps, n_features)))\nmodel.add(Dense(100, activation=' relu' ))\nmodel.add(Dense(n_outputs))\nmodel.compile(loss=' mse' , optimizer=' adam' )\n# fit network\nmodel.fit(train_x, train_y, epochs=epochs, batch_size=batch_size, verbose=verbose)\nreturn model\nListing 20.4: Example of a function for Ô¨Åtting an LSTM model.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 415, "page_label": "399"}}