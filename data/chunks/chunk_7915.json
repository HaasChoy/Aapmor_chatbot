{"id": "d9a2b75b-f5ed-4096-a836-341c8210122f", "text": "made.\nWe can implement a multi-headed 1D CNN using the Keras functional API. The updated\nversion of the evaluate model() function is listed below that creates a three-headed 1D CNN\nmodel. We can see that each head of the model is the same structure, although the kernel size\nis varied. The three heads then feed into a single merge layer before being interpreted prior to\nmaking a prediction.\n# fit and evaluate a model\ndef evaluate_model(trainX, trainy, testX, testy):", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 533, "page_label": "517"}}