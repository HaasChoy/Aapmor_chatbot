{"id": "a59d90ea-668c-4ab4-a2b4-884885936330", "text": "activation=' relu' )))\nmodel.add(TimeDistributed(MaxPooling1D(pool_size=2)))\nmodel.add(TimeDistributed(Flatten()))\nListing 14.44: Example of deÔ¨Åning the CNN input model.\nThe output of one application of the CNN submodel will be a vector. The output of\nthe submodel to each input subsequence will be a time series of interpretations that can be\ninterpreted by an LSTM model. This can be followed by a fully connected layer to interpret the", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 292, "page_label": "276"}}