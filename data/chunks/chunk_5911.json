{"id": "06adca44-30a2-4f26-848d-307b9a00e5f4", "text": "ﬁrst sample would look as follows:\nInput:\n[10, 20, 30]\nListing 8.54: Example input for the ﬁrst sample.\nOutput:\n[40, 50]\nListing 8.55: Example output for the ﬁrst sample.\nThe split sequence() function below implements this behavior and will split a given\nunivariate time series into samples with a speciﬁed number of input and output time steps.\n# split a univariate sequence into samples\ndef split_sequence(sequence, n_steps_in, n_steps_out):\nX, y = list(), list()\nfor i in range(len(sequence)):", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 125, "page_label": "109"}}