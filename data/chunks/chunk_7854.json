{"id": "6998d551-5636-4a84-921d-d163ecc8a79e", "text": "We can update the evaluate model() function to take a parameter, then use this parameter\nto decide whether or not to perform the standardization.\n# fit and evaluate a model\ndef evaluate_model(trainX, trainy, testX, testy, param):\nverbose, epochs, batch_size = 0, 10, 32\nn_timesteps, n_features, n_outputs = trainX.shape[1], trainX.shape[2], trainy.shape[1]\n# scale data\ntrainX, testX = scale_data(trainX, testX, param)\nmodel = Sequential()", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 520, "page_label": "504"}}