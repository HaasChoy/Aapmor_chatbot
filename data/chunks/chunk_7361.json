{"id": "f9041686-018a-4b49-aecb-eabb2f46a693", "text": "model.add(TimeDistributed(Dense(100, activation=' relu' )))\nmodel.add(TimeDistributed(Dense(1)))\nListing 20.17: Example of deﬁning the output model.\nThis allows the LSTM decoder to ﬁgure out the context required for each step in the output\nsequence and the wrapped dense layers to interpret each time step separately, yet reusing\nthe same weights to perform the interpretation. An alternative would be to ﬂatten all of the", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 421, "page_label": "405"}}