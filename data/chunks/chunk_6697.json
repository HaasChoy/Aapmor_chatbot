{"id": "4e53c67d-d52f-4402-a333-b8addb55ebab", "text": "model = Sequential()\nmodel.add(LSTM(n_nodes, activation=' relu' , input_shape=(n_input, 1)))\nmodel.add(Dense(n_nodes, activation=' relu' ))\nmodel.add(Dense(1))\nmodel.compile(loss=' mse' , optimizer=' adam' )\nListing 14.34: Example of deﬁning an LSTM forecast model.\nLike the CNN, the LSTM can support multiple variables or features at each time step. As\nthe car sales dataset only has one value at each time step, we can ﬁx this at 1, both when", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 286, "page_label": "270"}}