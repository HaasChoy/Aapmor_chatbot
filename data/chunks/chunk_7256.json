{"id": "8d129d3d-6c4e-4cbd-a682-27338a1a1cd1", "text": "the sequence. Each of these vectors can be merged via concatenation to make one very long\nvector that is then interpreted by some fully connected layers before a prediction is made. As\nwe build up the submodels, we keep track of the input layers and ﬂatten layers in lists. This is\nso that we can specify the inputs in the deﬁnition of the model object and use the list of ﬂatten\nlayers in the merge layer.\n# create a channel for each variable\nin_layers, out_layers = list(), list()", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 401, "page_label": "385"}}