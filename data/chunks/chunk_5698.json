{"id": "fdaf28b5-e1f2-4359-9196-390069938eb4", "text": "7.3. Multivariate MLP Models 64\nWe can deﬁne the second input submodel in the same way.\n# second input model\nvisible2 = Input(shape=(n_steps,))\ndense2 = Dense(100, activation=' relu' )(visible2)\nListing 7.29: Example of deﬁning the second input model.\nNow that both input submodels have been deﬁned, we can merge the output from each\nmodel into one long vector, which can be interpreted before making a prediction for the output\nsequence.\n# merge input models\nmerge = concatenate([dense1, dense2])", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 80, "page_label": "64"}}