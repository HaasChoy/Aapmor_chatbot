{"id": "c26b1472-53ee-49aa-b530-379f668f15e9", "text": "X.append(seq_x)\ny.append(seq_y)\nreturn array(X), array(y)\nListing 9.33: Example of a function for transforming a dependent series dataset into samples.\nWe can test this function on our dataset using three time steps for each input time series as\ninput. The complete example is listed below.\n# multivariate data preparation\nfrom numpy import array\nfrom numpy import hstack\n# split a multivariate sequence into samples\ndef split_sequences(sequences, n_steps):\nX, y = list(), list()", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 153, "page_label": "137"}}