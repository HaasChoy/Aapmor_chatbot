{"id": "af12a2d1-ac3e-4458-b8b7-7784c7174d43", "text": "pyplot.plot(days, scores, marker=' o' , label=' cnn' )\npyplot.show()\nListing 19.30: Example of evaluating a multi-headed CNN model for multi-step forecasting.\nRunning the example ﬁts and evaluates the model, printing the overall RMSE across all\nseven days, and the per-day RMSE for each lead time. We can see that in this case, the overall\nRMSE is skillful compared to a naive forecast, but with the chosen conﬁguration may not\nperform better than the multi-channel model in the previous section.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 407, "page_label": "391"}}