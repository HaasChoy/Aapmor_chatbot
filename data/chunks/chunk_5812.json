{"id": "3582aabf-cff1-4bb2-94bc-fc66e86daff9", "text": "...\nListing 8.2: Example of a univariate time series as a supervised learning problem.\nThe split sequence() function below implements this behavior and will split a given\nunivariate sequence into multiple samples where each sample has a speciÔ¨Åed number of time\nsteps and the output is a single time step.\n# split a univariate sequence into samples\ndef split_sequence(sequence, n_steps):\nX, y = list(), list()\nfor i in range(len(sequence)):\n# find the end of this pattern\nend_ix = i + n_steps", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 104, "page_label": "88"}}