{"id": "6eb63768-1f99-440d-9cc3-aa8746bb0409", "text": "As with other LSTM models, the input data must be reshaped into the expected three-\ndimensional shape of [samples, timesteps, features].\n# reshape input training data\nX = X.reshape((X.shape[0], X.shape[1], n_features))\nListing 9.71: Example of reshaping input samples for training the Encoder-Decoder LSTM.\nIn the case of the Encoder-Decoder model, the output, or y part, of the training dataset\nmust also have this shape. This is because the model will predict a given number of time steps", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 165, "page_label": "149"}}