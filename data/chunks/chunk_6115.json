{"id": "d3c3038f-ea35-4146-8dc4-80b60fae1ba1", "text": "model.add(LSTM(100, activation=' relu' , input_shape=(n_steps_in, n_features)))\nListing 9.66: Example of deﬁning the encoder input model.\nThe decoder uses the output of the encoder as an input. First, the ﬁxed-length output of\nthe encoder is repeated, once for each required time step in the output sequence.\n# repeat encoding\nmodel.add(RepeatVector(n_steps_out))\nListing 9.67: Example of repeating the encoded vector.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 165, "page_label": "149"}}