{"id": "c866946f-d033-4e78-bf65-4dedd4c553e9", "text": "model.add(LSTM(50, activation=' relu' , return_sequences=True, input_shape=(n_steps,\nn_features)))\nmodel.add(LSTM(50, activation=' relu' ))\nmodel.add(Dense(1))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 9.12: Example of deÔ¨Åning a Stacked LSTM model.\nWe can tie this together; the complete code example is listed below.\n# univariate stacked lstm example\nfrom numpy import array\nfrom keras.models import Sequential\nfrom keras.layers import LSTM\nfrom keras.layers import Dense", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 144, "page_label": "128"}}