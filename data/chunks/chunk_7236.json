{"id": "e3a2d810-6f6f-42d4-aabd-7f52d9b19c10", "text": "model.fit(train_x, train_y, epochs=epochs, batch_size=batch_size, verbose=verbose)\nreturn model\nListing 19.22: Example of a function for Ô¨Åtting a multi-channel CNN model.\nWe now have all of the elements required to develop a multi-channel CNN for multivariate\ninput data to make multi-step time series forecasts. The complete example is listed below.\n# multichannel multi-step cnn for the power usage dataset\nfrom math import sqrt\nfrom numpy import split\nfrom numpy import array", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 397, "page_label": "381"}}