{"id": "f42c895b-3092-4612-aab8-6fbd57b92176", "text": "15.6. Long Short-Term Memory Network Model 314\n# reshape sample into [samples, timesteps, features]\nx_input = array(history[-n_input:]).reshape((1, n_input, 1))\n# forecast\nyhat = model.predict(x_input, verbose=0)\nreturn correction + yhat[0]\nListing 15.45: Example of a function for making a forecast with a ﬁt LSTM model.\nWe can now deﬁne the function used to create the list of model conﬁgurations to evaluate.\nThe LSTM model is quite a bit slower to train than MLP and CNN models; as such, you", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 330, "page_label": "314"}}