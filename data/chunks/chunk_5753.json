{"id": "2bc62d01-b95a-4ea5-89f8-5d1a35e65ff5", "text": "approach was seen in the previous section were one time step of each output time series was\nforecasted as a vector. With the number of input and output steps speciﬁed in the n steps in\nand n steps out variables, we can deﬁne a multi-step time-series forecasting model.\n# define model\nmodel = Sequential()\nmodel.add(Dense(100, activation=' relu' , input_dim=n_steps_in))\nmodel.add(Dense(n_steps_out))\nmodel.compile(optimizer=' adam' , loss=' mse' )", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 91, "page_label": "75"}}