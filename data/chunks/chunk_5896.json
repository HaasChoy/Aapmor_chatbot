{"id": "c5d52d9d-fbbc-4871-bcf2-091a74813fd5", "text": "8.3. Multivariate CNN Models 106\n# define model\nvisible = Input(shape=(n_steps, n_features))\ncnn = Conv1D(filters=64, kernel_size=2, activation=' relu' )(visible)\ncnn = MaxPooling1D(pool_size=2)(cnn)\ncnn = Flatten()(cnn)\ncnn = Dense(50, activation=' relu' )(cnn)\nListing 8.46: Example of deﬁning the input model.\nWe can then deﬁne one output layer for each of the three series that we wish to forecast,\nwhere each output submodel will forecast a single time step.\n# define output 1", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 122, "page_label": "106"}}