{"id": "dd39d363-bfcc-41b8-898f-1c3cc5ee8617", "text": "output series can be handled by a separate output MLP model. We can refer to this as a\nmulti-output MLP model. It may oﬀer more ﬂexibility or better performance depending on the\nspeciﬁcs of the problem that is being modeled. This type of model can be deﬁned in Keras\nusing the Keras functional API. First, we can deﬁne the input model as an MLP with an input\nlayer that expects ﬂattened feature vectors.\n# define model\nvisible = Input(shape=(n_input,))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 87, "page_label": "71"}}