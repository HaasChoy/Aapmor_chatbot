{"id": "86ca0c07-78cb-4ca8-9519-7194f6f2d8e3", "text": "memory allowing it to accumulate internal state as it reads across the steps of a given input\nsequence. At the end of the sequence, each node in a layer of hidden LSTM units will output a\nsingle value. This vector of values summarizes what the LSTM learned or extracted from the\ninput sequence. This can be interpreted by a fully connected layer before a Ô¨Ånal prediction is\nmade.\n# define model\nmodel = Sequential()\nmodel.add(LSTM(n_nodes, activation=' relu' , input_shape=(n_input, 1)))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 286, "page_label": "270"}}