{"id": "fc20edf1-9572-4393-96b3-4377d5c696d4", "text": "model.add(LSTM(100))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(100, activation=' relu' ))\nmodel.add(Dense(n_outputs, activation=' softmax' ))\nListing 25.14: Example of deÔ¨Åning a CNN-LSTM model.\nIt is common to use two consecutive CNN layers followed by dropout and a max pooling\nlayer, and that is the simple structure used in the this CNN-LSTM model. The updated\nevaluate model() is listed below.\n# fit and evaluate a model\ndef evaluate_model(trainX, trainy, testX, testy):\n# define model", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 548, "page_label": "532"}}