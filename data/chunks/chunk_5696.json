{"id": "b6516534-a74d-4e82-8a07-00072949dfa2", "text": "is made for the output sequence. We can refer to this as a multi-headed input MLP model. It\nmay oﬀer more ﬂexibility or better performance depending on the speciﬁcs of the problem that\nare being modeled. This type of model can be deﬁned in Keras using the Keras functional API.\nFirst, we can deﬁne the ﬁrst input model as an MLP with an input layer that expects vectors\nwith n steps features.\n# first input model\nvisible1 = Input(shape=(n_steps,))\ndense1 = Dense(100, activation=' relu' )(visible1)", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 79, "page_label": "63"}}