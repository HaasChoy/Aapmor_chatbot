{"id": "7758fe36-cb7a-4dd6-8274-4a7182199b37", "text": "# fit model\nmodel.fit(X, y, epochs=1000, verbose=0)\nListing 8.8: Example of ﬁtting a CNN model.\nAfter the model is ﬁt, we can use it to make a prediction. We can predict the next value\nin the sequence by providing the input: [70, 80, 90]. And expecting the model to predict\nsomething like: [100]. The model expects the input shape to be three-dimensional with\n[samples, timesteps, features], therefore, we must reshape the single input sample before\nmaking the prediction.", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 106, "page_label": "90"}}