{"id": "939dcc80-f2ac-4f62-af33-736522da5908", "text": "forecasting.\nNow that we know how to prepare data for multi-step forecasting, letâ€™s look at a 1D CNN\nmodel that can learn this mapping.\n8.4.2 Vector Output Model\nThe 1D CNN can output a vector directly that can be interpreted as a multi-step forecast. This\napproach was seen in the previous section were one time step of each output time series was\nforecasted as a vector. As with the 1D CNN models for univariate data in a prior section, the", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 126, "page_label": "110"}}