{"id": "0c53b2dc-b3ae-44a5-81ca-4199c14d8f18", "text": "# flatten output\nn_output = y.shape[1] * y.shape[2]\ny = y.reshape((y.shape[0], n_output))\nListing 8.78: Example of ï¬‚attening output samples for training the model with vector output.\nThe complete example is listed below.\n# multivariate output multi-step 1d cnn example\nfrom numpy import array\nfrom numpy import hstack\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Flatten\nfrom keras.layers.convolutional import Conv1D", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 135, "page_label": "119"}}