{"id": "0d8360de-350f-47f7-935b-e9cccd5aefe2", "text": "model.add(Dense(n_features))\nmodel.compile(optimizer=' adam' , loss=' mse' )\nListing 8.41: Example of deÔ¨Åning a CNN model for forecasting multiple parallel time series.\nWe can predict the next value in each of the three parallel series by providing an input of\nthree time steps for each series.\n70, 75, 145\n80, 85, 165\n90, 95, 185\nListing 8.42: Example input for forecasting out-of-sample.\nThe shape of the input for making a single prediction must be 1 sample, 3 time steps, and 3", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 120, "page_label": "104"}}