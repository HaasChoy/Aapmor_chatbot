{"id": "26b11372-42af-4268-aa1c-46721d0ee7bc", "text": "series.\nWe can now develop an MLP model to make multivariate multi-step forecasts. In addition\nto ﬂattening the shape of the input data, as we have in prior examples, we must also ﬂatten the\nthree-dimensional structure of the output data. This is because the MLP model is only capable\nof taking vector inputs and outputs.\n# flatten input\nn_input = X.shape[1] * X.shape[2]\nX = X.reshape((X.shape[0], n_input))\n# flatten output\nn_output = y.shape[1] * y.shape[2]\ny = y.reshape((y.shape[0], n_output))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 99, "page_label": "83"}}