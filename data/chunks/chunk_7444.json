{"id": "8f602741-163c-491f-941d-1b4a53c24a70", "text": "model.fit(train_x, train_y, epochs=epochs, batch_size=batch_size, verbose=verbose)\nreturn model\nListing 20.34: Example of a function for deﬁning and ﬁtting a ConvLSTM Encoder-Decoder\nLSTM model.\nThis model expects ﬁve-dimensional data as input. Therefore, we must also update the\npreparation of a single sample in the forecast() function when making a prediction.\n# reshape into [samples, timesteps, rows, cols, channels]\ninput_x = input_x.reshape((1, n_steps, 1, n_length, 1))", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 438, "page_label": "422"}}