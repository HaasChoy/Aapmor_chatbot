{"id": "06c10308-0221-4da2-bde8-b26d9ef996b7", "text": "with 4 columns, or really 3 columns for the input data and 1 for the output data. If we have 7\nrows and 3 columns for the input data then the shape of the dataset would be [7, 3], or 7\nsamples and 3 features. We can make this concrete by transforming our small contrived dataset.\n# transform univariate time series to supervised learning problem\nfrom numpy import array\n# split a univariate sequence into samples\ndef split_sequence(sequence, n_steps):\nX, y = list(), list()", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 60, "page_label": "44"}}