{"id": "ba186969-d243-44ed-8375-f6171130938e", "text": "# summarize model performance\ndef summarize_scores(name, scores):\n# print a summary\nscores_m, score_std = mean(scores), std(scores)\nprint(' %s: %.3f RMSE (+/- %.3f)' % (name, scores_m, score_std))\n# box and whisker plot\npyplot.boxplot(scores)\npyplot.show()\nListing 14.11: Example of a function for summarizing the performance of a forecast model.\n14.3.6 Worked Example\nNow that we have deÔ¨Åned the elements of the test harness, we can tie them all together and", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 270, "page_label": "254"}}