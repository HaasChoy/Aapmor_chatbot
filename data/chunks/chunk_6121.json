{"id": "2c9071b2-88c3-4a61-8570-b70cee83378d", "text": "9.4. Multi-step LSTM Models 150\n# reshape output training data\ny = y.reshape((y.shape[0], y.shape[1], n_features))\nListing 9.72: Example of reshaping output samples for training the Encoder-Decoder LSTM.\nThe complete example of an Encoder-Decoder LSTM for multi-step time series forecasting\nis listed below.\n# univariate multi-step encoder-decoder lstm example\nfrom numpy import array\nfrom keras.models import Sequential\nfrom keras.layers import LSTM\nfrom keras.layers import Dense", "metadata": {"producer": "pdfTeX-1.40.18", "creator": "LaTeX with hyperref package", "creationdate": "2018-11-01T07:53:25+11:00", "author": "", "title": "", "subject": "", "keywords": "", "moddate": "2018-11-01T07:53:25+11:00", "trapped": "/False", "ptex.fullbanner": "This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) kpathsea version 6.2.3", "source": "/home/haas/rag_proj/samples/AAPMOR Website/Deep Learning for Time Series Forecasting - Predict the Future with MLPs, CNNs and LSTMs in Python (Jason Brownlee) (Z-Library).pdf", "total_pages": 574, "page": 166, "page_label": "150"}}